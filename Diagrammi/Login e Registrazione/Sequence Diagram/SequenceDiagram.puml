@startuml

actor Utente
participant "Interfaccia Utente (UI)" as UI
participant Supabase
participant "Email Utente" as EmailService
database "Supabase (DB)" as Database

Utente -> UI: Clicca sul tasto d'accesso

activate UI
UI -> UI: Mostra Pagina di Login
Utente -> UI: Inserisce credenziali e tenta l'accesso
UI -> Supabase: Richiesta di accesso\ncon credenziali (email, password)

    activate Supabase
    Supabase --> UI: Accesso Negato\nAccount non esistente
    deactivate Supabase

deactivate UI

Utente -> UI: Clicca sul tasto d'accesso
Utente -> UI: Clicca su "Non hai ancora un account? Registrati"
UI -> UI: Mostra Pagina di Registrazione
UI -> Supabase: Richiesta di registrazione\ncon credenziali (username, email, password)

activate Supabase
Supabase -> EmailService: Invia email di verifica\nall'indirizzo fornito

    activate EmailService
    EmailService --> Utente: Mostra messaggio\n"Controlla l'indirizzo di posta elettronica"
    deactivate EmailService

Supabase --> Database: Aggiungi nuovo account\nal database con stato 'waiting'

activate Database
Database --> Utente: Invia email di verifica\ncon link di conferma
Supabase --> Supabase: Controlla stato\nverifica email 
Utente -> Utente: Controlla la propria\nposta elettronica
Utente --> EmailService: Clicca link di verifica email

    activate EmailService
    EmailService --> Supabase: Email verificata con successo
    deactivate EmailService

deactivate Database
Supabase --> Database: Aggiorna stato\nse email verificata,\nrimuovi stato 'waiting'
activate Database

Database --> Supabase: Aggiornamento completato,\nprofilo inserito con successo

